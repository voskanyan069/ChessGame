CMAKE_MINIMUM_REQUIRED( VERSION 3.10 )

PROJECT( ChessGame VERSION 1.0 )

SET( CMAKE_CXX_STANDARD 11 )
SET( CMAKE_BUILD_TYPE DEBUG )

FIND_PACKAGE( Boost REQUIRED COMPONENTS program_options thread )
FIND_PACKAGE( PkgConfig REQUIRED )
PKG_SEARCH_MODULE( GRPCPP REQUIRED grpc++ )
PKG_SEARCH_MODULE( PROTOBUF REQUIRED protobuf )

SET( COMMON_LIBS ${COMMON_LIBS} utils )
SET( COMMON_LIBS ${COMMON_LIBS} chessproto )
SET( COMMON_LIBS ${COMMON_LIBS} ${Boost_LIBRARIES} )
SET( COMMON_LIBS ${COMMON_LIBS} ${PROTOBUF_LDFLAGS} )
SET( COMMON_LIBS ${COMMON_LIBS} ${GRPCPP_LDFLAGS} )

SET( GAME_LIBS ${GAME_LIBS} io )
SET( GAME_LIBS ${GAME_LIBS} chessgame )
SET( GAME_LIBS ${GAME_LIBS} ${COMMON_LIBS} )

SET( SERVER_LIBS ${SERVER_LIBS} chessserver )
SET( SERVER_LIBS ${SERVER_LIBS} ${COMMON_LIBS} )

INCLUDE_DIRECTORIES(
    ${PROJECT_SOURCE_DIR}/inc
    ${PROJECT_SOURCE_DIR}/src
    ${PROJECT_SOURCE_DIR}/proto
    ${Boost_INCLUDE_DIRS}
    ${GRPCPP_INCLUDEDIR}
    )

FILE( GLOB IO_SOURCES "${PROJECT_SOURCE_DIR}/src/io/*.cxx" )
FILE( GLOB UTILS_SOURCES
    "${PROJECT_SOURCE_DIR}/src/args/*.cxx"
    "${PROJECT_SOURCE_DIR}/src/utils/*.cxx"
    )
FILE( GLOB PROTO_SOURCES "${PROJECT_SOURCE_DIR}/proto/protogen/*.cc" )
FILE( GLOB SERVER_MAIN_SOURCES "${PROJECT_SOURCE_DIR}/src/server.cxx" )
FILE( GLOB SERVER_SOURCES
    "${PROJECT_SOURCE_DIR}/src/server/*.cxx"
    )
FILE( GLOB GAME_MAIN_SOURCES "${PROJECT_SOURCE_DIR}/src/main.cxx" )
FILE( GLOB CHESS_SOURCES
    "${PROJECT_SOURCE_DIR}/src/chess/*.cxx"
    "${PROJECT_SOURCE_DIR}/src/pieces/*.cxx"
    "${PROJECT_SOURCE_DIR}/src/player/*.cxx"
    "${PROJECT_SOURCE_DIR}/src/client/*.cxx"
    )

ADD_LIBRARY( io SHARED ${IO_SOURCES} )
ADD_LIBRARY( utils SHARED ${UTILS_SOURCES} )
ADD_LIBRARY( chessproto SHARED ${PROTO_SOURCES} )
ADD_LIBRARY( chessserver SHARED ${SERVER_SOURCES} )
ADD_LIBRARY( chessgame SHARED ${CHESS_SOURCES} )
ADD_EXECUTABLE( ChessGame ${GAME_MAIN_SOURCES} )
ADD_EXECUTABLE( ChessServer ${SERVER_MAIN_SOURCES} )
TARGET_LINK_LIBRARIES( ChessGame ${GAME_LIBS} )
TARGET_LINK_LIBRARIES( ChessServer ${SERVER_LIBS} )
