// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChessServer.proto

#include "ChessServer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace Proto {
}  // namespace Proto
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_ChessServer_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ChessServer_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ChessServer_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ChessServer_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_ChessServer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021ChessServer.proto\022\005Proto\032\026ChessServerT"
  "ypes.proto2\331\004\n\013ChessServer\022,\n\010GetRooms\022\014"
  ".Proto.Empty\032\020.Proto.RoomsInfo\"\000\022,\n\014IsRo"
  "omExists\022\r.Proto.String\032\013.Proto.Bool\"\000\0225"
  "\n\nCreateRoom\022\027.Proto.RoomWithUsername\032\014."
  "Proto.Empty\"\000\0223\n\010JoinRoom\022\027.Proto.RoomWi"
  "thUsername\032\014.Proto.Empty\"\000\0226\n\014SpectateRo"
  "om\022\r.Proto.String\032\023.Proto.LastMoveInfo\"\000"
  "0\001\0227\n\013GetUsername\022\027.Proto.RoomWithUserna"
  "me\032\r.Proto.String\"\000\0223\n\014WaitForReady\022\023.Pr"
  "oto.RoomSettings\032\014.Proto.Empty\"\000\022,\n\005Read"
  "y\022\023.Proto.ReadyRequest\032\014.Proto.Empty\"\000\022/"
  "\n\tMovePiece\022\022.Proto.MoveRequest\032\014.Proto."
  "Empty\"\000\022;\n\rReadPieceMove\022\023.Proto.RoomSet"
  "tings\032\023.Proto.LastMoveInfo\"\000\022@\n\017SetKingH"
  "ittable\022\035.Proto.RoomWithIsKingHittable\032\014"
  ".Proto.Empty\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ChessServer_2eproto_deps[1] = {
  &::descriptor_table_ChessServerTypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ChessServer_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ChessServer_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ChessServer_2eproto = {
  false, false, descriptor_table_protodef_ChessServer_2eproto, "ChessServer.proto", 662,
  &descriptor_table_ChessServer_2eproto_once, descriptor_table_ChessServer_2eproto_sccs, descriptor_table_ChessServer_2eproto_deps, 0, 1,
  schemas, file_default_instances, TableStruct_ChessServer_2eproto::offsets,
  file_level_metadata_ChessServer_2eproto, 0, file_level_enum_descriptors_ChessServer_2eproto, file_level_service_descriptors_ChessServer_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ChessServer_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ChessServer_2eproto)), true);
namespace Proto {

// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
